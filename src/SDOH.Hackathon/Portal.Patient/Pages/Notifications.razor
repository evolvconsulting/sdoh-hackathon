@page "/notifications"
@using System.Collections.ObjectModel

<MudText Typo="Typo.h4">Notifications</MudText>

<div hidden="@(!NewNotifications.Any())">
    <MudText Typo="Typo.h5" Class="mt-4">New</MudText>
    <MudList Clickable="true">
        @foreach (var notification in NewNotifications)
        {
            var hasLink = NotificationLinkByTypeID.ContainsKey(notification.NotificationTypeID);
            <MudListItem Href="@(hasLink ? NotificationLinkByTypeID[notification.NotificationTypeID] : "#")" Class="align-content-center">
                @notification.Message
                <MudIcon hidden="@(!hasLink)" Class="justify-end" Icon="@Icons.Material.Filled.ChevronRight"></MudIcon>
            </MudListItem>
            <MudDivider />
        }
    </MudList>
</div>

@code {
    //TODO: wire up actual notifications
    public IEnumerable<Notification> NewNotifications = new List<Notification>() { new Notification { NotificationTypeID=(int)NotificationTypeID.RecommendedIntervention, Message = "You have new recommended interventions. Click here to view more information." } };
    public class Notification
    {
        public int NotificationTypeID { get; set; }
        public string Message { get; set; }
    }

    private IReadOnlyDictionary<int, string> NotificationLinkByTypeID = new ReadOnlyDictionary<int, string>(new Dictionary
    <int, string>
        () {
            { (int)NotificationTypeID.RecommendedIntervention, "SuggestedInterventions" } 
        });

    public enum NotificationTypeID
    {
        InformationOnly = 0,
        RecommendedIntervention = 1
    }
}
